package fr.pierrehb.graphic;

import fr.pierrehb.other.Caracteres;

public class Comic_Sans_MS extends Caractere implements Caracteres{
			private static final int[] A = {7,1,9,4,  8,4,10,10,  9,9,11,13,  6,3,7,6,  5,4,6,7,  4,6,5,7,  3,7,8,9,  2,9,4,11,  1,11,3,13};
			private static final int[] B = {1,1,3,13  ,3,1,6,3,  5,2,7,4,  6,3,8,6,  5,5,7,8,  3,6,5,8,  6,7,8,9,  7,8,9,11,  6,10,8,12,  3,11,6,13};
			private static final int[] C = {7,3,9,4,  5,1,9,3,  4,2,5,4,  3,3,4,6,  2,4,3,6,  1,6,3,11,  2,10,4,12,  3,11,7,13,  6,10,8,12,  8,9,9,11};
			private static final int[] D = {1,1,3,12,  3,2,6,4,  6,3,8,5,  8,4,9,6,  9,5,10,6,  9,6,11,10,  7,10,10,11,  8,11,9,12,  2,11,8,13};
			private static final int[] E = {1,1,3,12,  3,1,8,3,  3,6,8,8,  2,11,8,13};
			private static final int[] F = {1,1,3,13,  3,1,9,3,  9,2,10,3,  3,6,9,8};
			private static final int[] G = {8,2,10,4,  5,1,8,3,  4,2,6,4,  3,3,5,5,  2,4,4,6,  1,6,3,11,  2,11,3,12,  3,11,7,13,  7,10,9,12,  8,9,10,11,  9,6,11,9,  4,6,9,8};
			private static final int[] H = {1,1,3,13,  3,7,5,9,  5,6,9,8,  9,1,11,13};
			private static final int[] I = {1,1,9,3,  4,3,6,11,  1,11,9,13};
			private static final int[] J = {3,1,11,3,  6,3,8,12,  4,11,7,13,  2,10,4,12,  1,8,3,11};
			private static final int[] K = {1,1,3,13,  3,6,4,9,  4,8,5,10,  5,9,6,11,  6,10,7,12,  7,11,9,13,  4,5,6,6,  5,4,7,5,  6,3,8,4,  7,2,9,3,  8,1,9,2};
			private static final int[] L = {1,1,3,13,  3,11,9,13};
			private static final int[] M = {1,10,2,13,  2,6,3,13,  3,2,4,9,  4,1,5,5,  5,1,6,11,  6,6,7,13,  7,10,8,13,  8,6,9,13,  9,2,10,10,  10,1,11,5,  11,2,12,11,  12,6,13,13,  13,11,14,13};
			private static final int[] N = {1,1,3,13,  3,3,4,5,  4,4,5,6,  5,5,6,7,  6,6,7,9,  7,8,8,10,  8,9,9,11,  9,10,10,12,  10,1,11,13,  11,2,12,13};
			private static final int[] O = {1,5,3,10,  2,3,4,6,  3,2,5,4,  5,1,10,3,  9,2,11,4,  10,3,12,9,  9,8,11,11,  8,10,10,12,  4,11,8,13,  2,10,4,12};
			private static final int[] P = {1,1,3,13,  3,1,6,3,  5,2,7,4,  6,3,8,6,  5,5,7,7,  3,6,6,8};
			private static final int[] Q = {1,5,3,9,  2,3,4,5,  3,2,6,4,  5,1,11,3,  10,2,12,4,  11,3,13,5,  12,5,14,10,  11,10,13,12,  5,11,9,13,  3,10,5,12,  2,9,4,11,  7,8,8,10,  8,9,9,11,  9,11,10,12,  10,11,12,13,  11,13,13,14,  12,14,14,15,  13,15,14,16};
			private static final int[] R = {1,1,3,13,  3,1,5,3,  5,2,7,4,  6,3,8,5,  7,4,9,7,  6,7,8,8,  3,8,7,10,  5,10,8,11,  7,11,8,12,  8,11,10,13};
			private static final int[] S = {1,9,3,11,  2,11,9,12,  3,12,7,13,  7,10,8,11,  8,7,10,11,  7,6,9,8,  3,5,8,7,  2,3,4,6,  3,2,5,4,  4,1,8,3,  8,2,9,3};
			private static final int[] T = { 1,1,11,3,  5,3,7,13};
			private static final int[] U = {1,1,3,10,  2,9,4,12,  4,11,8,13,  7,10,9,12,  8,9,10,11,  9,1,11,9};
			private static final int[] V = {1,1,3,4,  2,4,4,8,  3,8,5,11,  4,11,7,13,  6,7,8,11,  7,3,9,7,  8,1,10,3};
			private static final int[] W = {1,1,2,5,  2,1,3,9,  3,5,4,13,  4,10,5,13,  5,8,6,13,  6,5,7,10,  7,2,8,8,  8,1,9,4,  9,1,10,12,  10,5,11,13,  11,11,12,13,  12,8,13,13,  13,5,14,11,  14,1,15,8,  15,1,16,5};
			private static final int[] X = {1,1,3,3,  2,3,4,4,  3,4,5,5,  4,5,8,6,  7,4,9,5,  8,3,10,4,  9,1,11,3,  5,6,7,7,  5,7,8,9,  7,8,9,10,  8,10,10,11,  9,11,11,13,  4,8,5,10,  3,9,4,11,  2,10,3,11,  1,11,3,13};
			private static final int[] Y = {1,1,3,3,  2,3,4,5,  3,5,5,7,  4,7,8,9,  5,9,7,11,  4,10,6,12,  3,12,5,13,  6,5,8,7,  7,3,9,6,  8,1,10,4};
			private static final int[] Z = {1,1,11,3,  7,3,10,4,  6,4,9,5,  5,5,8,6,  4,6,7,7,  4,7,6,8,  3,8,5,9,  2,9,4,10,  1,10,3,11,  1,11,11,13};
			private static final int[] a = {1,7,3,12,  2,11,6,13,  6,5,8,12,  7,12,9,13,  3,5,6,7,  2,6,4,8};
			private static final int[] b = {1,0,3,13,  3,11,7,13,  6,10,8,12,  7,7,9,11,  6,6,8,8,  4,5,7,7,  3,6,4,8};  
			private static final int[] c = {7,6,8,8,  3,5,7,7,  2,6,4,8,  1,8,3,11,  2,11,3,12,  3,11,7,13,  7,10,8,12};
			private static final int[] d = {7,0,9,13,  3,5,7,7,  2,6,4,8,  1,7,3,11,  2,10,4,12,  3,11,7,13};
			private static final int[] e = {7,10,8,12,  3,11,7,13,  3,10,4,11,  1,7,3,12,  2,6,4,8,  3,5,7,7,  6,6,8,8,  5,8,7,9,  4,9,6,10};
			private static final int[] f = {1,5,7,7,  3,2,5,13,  4,1,6,3,  5,0,8,2};
			private static final int[] g = {5,10,6,12,  2,11,5,13,  1,7,3,12,  2,6,4,8,  3,5,7,7,  6,6,8,14,  5,14,7,16,  1,15,6,17};
			private static final int[] h = {1,0,3,13,  3,6,4,8,  4,5,7,7,  6,6,8,13};
			private static final int[] i = {1,1,3,3,  1,5,3,13};
			private static final int[] j = {5,1,7,3,  5,5,7,17,  3,16,6,18,  2,16,3,17,  1,14,3,16};
			private static final int[] k = {1,0,3,13,  3,8,6,10,  4,7,6,8,  5,6,7,7,  6,5,7,6,  5,10,7,11,  6,11,8,13};
			private static final int[] l = {1,0,3,13};
			private static final int[] m = {1,5,3,13,  3,6,4,8,  4,5,5,7,  5,5,7,13,  7,6,8,8,  8,5,9,7,  9,5,10,6,  9,6,11,13};
			private static final int[] n = {1,5,3,13,  3,6,4,8,  4,5,7,7,  6,6,8,13};
			private static final int[] o = {1,7,3,11,  2,11,3,12,  3,11,6,13,  6,11,7,12,  6,7,8,11,  6,6,7,7,  3,5,6,7,  2,6,3,7};
			private static final int[] p = {1,4,3,18,  3,6,4,7,  4,5,7,7,  6,6,8,11,  6,11,7,12,  3,11,6,13};
			private static final int[] q = {1,7,3,11,  2,11,3,12,  3,11,6,13,  6,7,8,17,  3,5,8,7,  2,6,4,8};
			private static final int[] r = {1,5,3,13,  3,6,4,7,  4,5,5,6,  5,5,7,8};
			private static final int[] s = {4,5,7,7,  2,6,4,10,  1,7,2,9,  4,8,6,10,  5,9,7,12,  2,11,6,13,  1,11,2,12};
			private static final int[] t = {3,3,5,13,  1,5,7,7};
			private static final int[] u = {1,5,3,12,  2,11,8,13,  6,5,8,11};
			private static final int[] v = {1,5,3,7,  2,7,4,10,  3,10,6,12,  4,12,5,13,  5,7,7,10,  6,5,8,7};
			private static final int[] w = {1,5,3,11,  2,11,5,13,  4,8,6,11,  5,5,7,8,  6,8,8,9,  7,9,8,11,  7,11,10,13,  9,5,11,11};
			private static final int[] x = {1,5,3,7,  3,6,4,7,  2,7,8,8,  6,6,7,7,  7,5,9,7,  3,8,7,10,  3,11,4,12,  6,11,7,12,  2,10,8,11,  1,11,3,13,  7,11,9,13};
			private static final int[] y = {1,5,2,7,  2,5,3,9,  3,6,4,11,  4,8,5,14,  5,10,6,14,  6,10,7,12,  6,8,8,10,  7,5,9,8,  3,14,5,16,  2,16,4,18};
			private static final int[] z = {1,5,8,7,  5,7,7,8,  4,8,6,9,  3,9,5,10,  2,10,4,11,  1,11,8,13};
			private static final int[] n1 = {1,3,2,5,  2,2,3,4,  3,1,5,11,  1,11,7,13};
			private static final int[] n2 = {1,3,3,5,  2,2,4,4,  3,1,7,3,  7,2,9,6,  7,6,8,7,  5,6,7,8,  4,7,5,9,  2,8,4,10,  1,9,3,11,  1,11,9,13};
			private static final int[] n3 = {1,2,3,4,  2,1,7,3,  6,2,8,6,  5,5,6,6,  2,6,6,7,  3,7,8,8,  6,8,8,11,  2,11,7,13,  1,10,2,12};
			private static final int[] n4 = {7,1,9,13,  1,8,11,10,  6,2,7,4,  5,3,6,5,  4,5,5,7,  3,6,4,8,  2,7,3,8};
			private static final int[] n5 = {1,1,9,3,  1,3,3,8,  3,4,7,6,  7,5,8,6,  6,6,7,7,  7,6,9,11,  7,11,8,12,  6,10,7,13,  2,11,6,13,  1,10,3,12};
			private static final int[] n6 = {5,1,7,3,  4,2,6,4,  3,3,5,5,  2,4,4,6,  1,6,8,8,  7,7,9,11,  6,10,8,12,  3,11,7,13,  2,10,4,12,  1,8,3,11};
			private static final int[] n7 = {1,1,10,3,  7,3,9,4,  6,4,8,5,  6,5,7,8,  5,6,6,10,  4,8,5,12,  3,10,4,13};
			private static final int[] n8 = {1,2,3,6,  3,1,7,3,  7,2,8,3,  7,3,9,5,  2,5,8,7,  6,7,9,8,  7,8,9,11,  7,11,8,12,  3,11,7,13,  1,7,3,12,  3,7,4,8};
			private static final int[] n9 = {3,7,6,9,  2,6,4,8,  1,3,3,7,  2,2,4,4,  3,1,7,3,  6,2,8,4,  7,3,9,6,  6,6,9,9,  6,9,8,11,  5,10,7,12,  4,11,6,13,  2,12,4,14};
			private static final int[] n0 = {2,2,4,4,  4,1,8,3,  7,2,9,4,  8,4,10,10,  7,10,9,12,  3,11,8,13,  2,10,4,12,  1,4,3,10};
			private static final int[] Ê = {1,1,3,12,  3,1,8,3,  3,6,8,8,  2,11,8,13,  2,-1,4,0,  3,-2,7,-1,  4,-3,6,-2,  6,-1,8,0};
			private static final int[] É = {1,1,3,12,  3,1,8,3,  3,6,8,8,  2,11,8,13,  4,-3,5,-1,  5,-4,6,-2,  6,-5,7,-3,  7,-6,8,-5};
			private static final int[] À = {7,1,9,4,  8,4,10,10,  9,9,11,13,  6,3,7,6,  5,4,6,7,  4,6,5,7,  3,7,8,9,  2,9,4,11,  1,11,3,13,  5,-4,6,-2,  6,-3,7,-1,  7,-2,8,0};
			private static final int[] Ï = {1,1,9,3,  4,3,6,11,  1,11,9,13,  2,-2,4,0,  6,-2,8,0};
			private static final int[] Î = {1,1,9,3,  4,3,6,11,  1,11,9,13,  2,-2,4,-1,  3,-3,7,-2,  4,-4,6,-3,  6,-2,8,-1};
			private static final int[] Ù = {1,1,3,10,  2,9,4,12,  4,11,8,13,  7,10,9,12,  8,9,10,11,  9,1,11,9,  4,-4,5,-2,  5,-3,6,-1,  6,-2,7,0};
			private static final int[] Ô = {1,5,3,10,  2,3,4,6,  3,2,5,4,  5,1,10,3,  9,2,11,4,  10,3,12,9,  9,8,11,11,  8,10,10,12,  4,11,8,13,  2,10,4,12,  4,-2,6,-1,  5,-3,9,-2,  6,-4,8,-3,  8,-2,10,-1};
			private static final int[] Ç = {7,3,9,4,  5,1,9,3,  4,2,5,4,  3,3,4,6,  2,4,3,6,  1,6,3,11,  2,10,4,12,  3,11,7,13,  6,10,8,12,  8,9,9,11,  4,13,6,14,  2,14,5,15};
			private static final int[] ê = {7,10,8,12,  3,11,7,13,  3,10,4,11,  1,7,3,12,  2,6,4,8,  3,5,7,7,  6,6,8,8,  5,8,7,9,  4,9,6,10,  2,3,4,4,  3,2,7,3,  4,1,6,2,  6,3,8,4};
			private static final int[] é = {7,10,8,12,  3,11,7,13,  3,10,4,11,  1,7,3,12,  2,6,4,8,  3,5,7,7,  6,6,8,8,  5,8,7,9,  4,9,6,10,  4,2,5,4,  5,1,6,3,  6,0,7,2,  7,0,8,1};
			private static final int[] è = {7,10,8,12,  3,11,7,13,  3,10,4,11,  1,7,3,12,  2,6,4,8,  3,5,7,7,  6,6,8,8,  5,8,7,9,  4,9,6,10,  3,0,4,2,  4,1,5,3,  5,2,6,4};
			private static final int[] à = {1,7,3,12,  2,11,6,13,  6,5,8,12,  7,12,9,13,  3,5,6,7,  2,6,4,8,  3,0,4,2,  4,1,5,3,  5,2,6,4};
			private static final int[] ï = {3,5,5,13,  1,2,3,4,  5,2,7,4};
			private static final int[] î = {3,5,5,13,  1,3,3,4,  2,2,6,3,  3,1,5,2,  5,3,7,4};
			private static final int[] ù = {1,5,3,12,  2,11,8,13,  6,5,8,11,  3,0,4,2,  4,1,5,3,  5,2,6,4};
			private static final int[] û = {1,5,3,12,  2,11,8,13,  6,5,8,11, 2,3,4,4,  3,2,7,3,  4,1,6,2,  6,3,8,4};
			private static final int[] ô = {1,7,3,11,  2,11,3,12,  3,11,6,13,  6,11,7,12,  6,7,8,11,  6,6,7,7,  3,5,6,7,  2,6,3,7,  1,3,3,4,  2,2,6,3,  3,1,5,2,  5,3,7,4};
			private static final int[] ç = {7,6,8,8,  3,5,7,7,  2,6,4,8,  1,8,3,11,  2,11,3,12,  3,11,7,13,  7,10,8,12,  4,13,6,14,  5,14,6,15,  2,15,6,16};
			private static final int[] È = {1,1,3,12,  3,1,8,3,  3,6,8,8,  2,11,8,13,        3,-4,4,-2,  4,-3,5,-1,  5,-2,6,0};
			private static final int[] Â= {7,1,9,4,  8,4,10,10,  9,9,11,13,  6,3,7,6,  5,4,6,7,  4,6,5,7,  3,7,8,9,  2,9,4,11,  1,11,3,13,        5,-1,7,0,  6,-2,10,-1,  7,-3,9,-2,  9,-1,11,0};
			private static final int[] Û = {1,1,3,10,  2,9,4,12,  4,11,8,13,  7,10,9,12,  8,9,10,11,  9,1,11,9,        3,-1,5,0,  4,-2,8,-1,  5,-3,7,-2,  7,-1,9,0};
			private static final int[] Ò = {1,5,3,10,  2,3,4,6,  3,2,5,4,  5,1,10,3,  9,2,11,4,  10,3,12,9,  9,8,11,11,  8,10,10,12,  4,11,8,13,  2,10,4,12,        4,-4,5,-2,  5,-3,6,-1,  6,-2,7,0};
			private static final int[] ò = {1,7,3,11,  2,11,3,12,  3,11,6,13,  6,11,7,12,  6,7,8,11,  6,6,7,7,  3,5,6,7,  2,6,3,7,        3,0,4,2,  4,1,5,3,  5,2,6,4};
			private static final int[] ë = {7,10,8,12,  3,11,7,13,  3,10,4,11,  1,7,3,12,  2,6,4,8,  3,5,7,7,  6,6,8,8,  5,8,7,9,  4,9,6,10,        1,2,3,4,  5,2,7,4};
			private static final int[] Ë = {1,1,3,12,  3,1,8,3,  3,6,8,8,  2,11,8,13,        2,-2,4,0,  6,-2,8,0};
			private static final int[] ä = {1,7,3,12,  2,11,6,13,  6,5,8,12,  7,12,9,13,  3,5,6,7,  2,6,4,8,        2,2,4,4,  6,2,8,4};
			private static final int[] Ä= {7,1,9,4,  8,4,10,10,  9,9,11,13,  6,3,7,6,  5,4,6,7,  4,6,5,7,  3,7,8,9,  2,9,4,11,  1,11,3,13,        5,-2,7,0,  9,-2,11,0};
			private static final int[] ö = {1,7,3,11,  2,11,3,12,  3,11,6,13,  6,11,7,12,  6,7,8,11,  6,6,7,7,  3,5,6,7,  2,6,3,7,        1,2,3,4,  5,2,7,4};
			private static final int[] Ö = {1,5,3,10,  2,3,4,6,  3,2,5,4,  5,1,10,3,  9,2,11,4,  10,3,12,9,  9,8,11,11,  8,10,10,12,  4,11,8,13,  2,10,4,12,        4,-2,6,0,  8,-2,10,0};
			private static final int[] ÿ = {1,5,2,7,  2,5,3,9,  3,6,4,11,  4,8,5,14,  5,10,6,14,  6,10,7,12,  6,8,8,10,  7,5,9,8,  3,14,5,16,  2,16,4,18,        2,2,4,4,  6,2,8,4};
			private static final int[] â = {1,7,3,12,  2,11,6,13,  6,5,8,12,  7,12,9,13,  3,5,6,7,  2,6,4,8,        2,3,4,4,  3,2,7,3,  4,1,6,2,  6,3,8,4};
			private static final int[] ì = {3,5,5,13,        3,0,4,2,  4,1,5,3,  5,2,6,4};
			private static final int[] ü = {1,5,3,12,  2,11,8,13,  6,5,8,11,        1,2,3,4,  5,2,7,4};
			private static final int[] AND = {8,2,9,4,  7,1,8,5,  5,1,7,3,  4,2,5,7,  5,3,6,7,  6,4,7,8,  6,7,8,8,  7,8,11,9,  10,6,11,8,  10,9,11,10,  8,9,10,12,  10,11,11,12,  11,12,12,13,  3,11,8,13,  2,10,4,12,  1,8,3,11,  2,7,4,8,  3,6,4,7};
			private static final int[] VIRG = {1,13,2,15,  2,12,3,14};
			private static final int[] PVIRG = {2,12,4,14,  3,11,5,12,  2,5,4,7};
			private static final int[] POINT = {1,11,3,13};
			private static final int[] EXC = {1,0,3,11,  1,12,3,14};
			private static final int[] INTER = {1,3,3,5,  2,2,6,4,  5,3,7,5,  6,4,8,8,  5,8,7,9,  3,9,6,10,  3,10,4,11,  2,12,4,14};
			private static final int[] APOST = {1,1,3,6};
			private static final int[] GUIE = {1,1,3,6,  5,1,7,6};
			private static final int[] TIRER = {1,7,6,9};
			private static final int[] DPOINT = {1,5,3,7,  1,10,3,12};
			private static final int[] INF = {4,4,6,6,  3,5,4,6,  2,6,5,7,  1,7,3,8,  2,8,4,9,  3,9,5,10,  4,10,6,11};
			private static final int[] SUP = {1,4,3,5,  2,5,4,6,  3,6,5,7,  4,7,6,8,  2,8,5,9,  1,9,4,10,  1,10,2,11};
			private static final int[] SLASH = {6,1,8,4,  5,4,7,6,  4,6,6,8,  3,8,5,10,  2,10,4,12,  1,12,3,14};
			private static final int[] STAR = {1,2,2,3,  4,1,5,2,  2,2,8,4,  3,4,6,5,  2,5,4,6,  2,6,3,7,  5,5,7,7,};
			private static final int[] PLUS = {4,4,6,12,  1,7,9,9,};
			private static final int[] EGAL = {1,4,7,6,  1,9,7,11};
			private static final int[] POURCENT = {1,2,3,5,  2,1,5,3,  4,2,6,5,  2,4,5,6,  9,0,10,2,  8,1,9,4,  7,3,8,6,  6,5,7,8,  5,7,6,10,  4,9,5,12,  3,11,4,13,  9,8,12,10,  11,9,13,12,  9,11,12,13,  8,9,10,12};
			private static final int[] PARG = {4,0,6,2,  3,1,5,3,  2,3,4,5,  1,5,3,12,  2,12,4,14,  3,14,5,15,  4,15,6,16};
			private static final int[] PARD = {0,0,2,2,  1,1,3,3,  2,3,4,5,  3,5,5,12,  2,12,4,14,  1,14,3,15,  0,15,2,16};
			private static final int[] CROG = {1,0,6,2,  1,2,3,14,  1,14,6,16};
			private static final int[] CROD = {0,0,5,2,  3,2,5,14,  0,14,5,16};
			private static final int[] ACOG = {3,0,6,2,  2,1,4,8,  1,7,3,9,  2,9,4,14,  3,14,6,16};
			private static final int[] ACOD = {0,0,3,2,  2,1,4,8,  3,7,5,10,  5,8,6,9,  2,9,4,14,  0,14,3,16};
			private static final int[] SPACE = {0,0,0,0};
			private static final int[] UNKNOWN = {0,0,16,1,  15,1,16,16,  0,15,15,16,  0,1,1,15,  2,3,3,4,  3,2,6,3,  6,3,7,7,  4,7,6,8,  4,8,5,10,  4,11,5,13,  9,3,10,4,  10,2,13,3,  13,3,14,7,  11,7,13,8,  11,8,12,10,  11,11,12,13};  
			private static final int[] LINE = {0,0,0,0};
			private static final int[] RED = {255,0,0};
			private static final int[] BLUE = {0,0,255};
			private static final int[] GREEN = {0,255,0};
			private static final int[] GRAY = {128,128,128};
			private static final int[] WHITE = {255,255,255};
			private static final int[] BLACK = {0,0,0};
			private static final int[] GOLD = {255,217,0};
			private static final int[] LIGHTBLUE = {102,163,196};
			private static final int[] ROTATETRIGO = {4,9,5,10,  1,12,2,13,  2,10,5,13,  1,6,3,10,  2,4,4,6,  3,3,4,4,  4,2,6,4,  6,1,10,3,  10,2,12,4,  12,3,13,4,  12,4,14,6,  13,6,15,10,  12,10,14,12,  12,12,13,13,  10,12,12,14};
			private static final int[] ROTATEDIRECT = {4,12,6,14,  3,12,4,13,  2,10,4,12,  1,6,3,10,  2,4,4,6,  3,3,4,4,  4,2,6,4,  6,1,10,3,  10,2,12,4,  12,3,13,4,  12,4,14,6,  13,6,15,10,  11,10,14,13,  11,9,12,10,  14,12,15,13};
			
			
			

	public Comic_Sans_MS(int x, int y, float Taille, caractere Chara, int xStart) {
		super(x, y, Taille, Chara, xStart);
		setOffset(chara);
		
	}
	public Comic_Sans_MS(int x, int y, float Taille, caractere Chara) {
		super(x, y, Taille, Chara);
		setOffset(chara);
		
	}
	private void setOffset(caractere chara) {
		switch (super.chara) {
		case A:offset = 12;break;
		case B:offset = 10;break;
		case C:offset = 10;break;
		case D:offset = 12;break;
		case E:offset = 9;break;
		case F:offset = 11;break;
		case G:offset = 12;break;
		case H:offset = 12;break;
		case I:offset = 10;break;
		case J:offset = 12;break;
		case K:offset = 10;break;
		case L:offset = 9;break;
		case M:offset = 15;break;
		case N:offset = 13;break;
		case O:offset = 13;break;
		case P:offset = 9;break;
		case Q:offset = 15;break;
		case R:offset = 11;break;
		case S:offset = 11;break;
		case T:offset = 12;break;
		case U:offset = 12;break;
		case V:offset = 11;break;
		case W:offset = 17;break;
		case X:offset = 12;break;
		case Y:offset = 11;break;
		case Z:offset = 12;break;
		case a:offset = 10;break;
		case b:offset = 10;break;
		case c:offset = 9;break;
		case d:offset = 10;break;
		case e:offset = 9;break;
		case f:offset = 9;break;
		case g:offset = 9;break;
		case h:offset = 9;break;
		case i:offset = 4;break;
		case j:offset = 8;break;
		case k:offset = 9;break;
		case l:offset = 4;break;
		case m:offset = 12;break;
		case n:offset = 9;break;
		case o:offset = 9;break;
		case p:offset = 9;break;
		case q:offset = 9;break;
		case r:offset = 8;break;
		case s:offset = 8;break;
		case t:offset = 8;break;
		case u:offset = 9;break;
		case v:offset = 9;break;
		case w:offset = 12;break;
		case x:offset = 10;break;
		case y:offset = 10;break;
		case z:offset = 9;break;
		case n1:offset = 8;break;
		case n2:offset = 10;break;
		case n3:offset = 9;break;
		case n4:offset = 12;break;
		case n5:offset = 10;break;
		case n6:offset = 10;break;
		case n7:offset = 11;break;
		case n8:offset = 10;break;
		case n9:offset = 10;break;
		case n0:offset = 11;break;
		case Ê:offset = 9;break;
		case É:offset = 9;break;
		case À:offset = 12;break;
		case Ï:offset = 10;break;
		case Î:offset = 10;break;
		case Ù:offset = 12;break;
		case Ô:offset = 13;break;
		case Ç:offset = 10;break;
		case é:offset = 9;break;
		case è:offset = 9;break;
		case ê:offset = 9;break;
		case à:offset = 10;break;
		case ï:offset = 8;break;
		case î:offset = 8;break;
		case ù:offset = 9;break;
		case û:offset = 9;break;
		case ô:offset = 9;break;
		case ç:offset = 9;break;
		case È:offset = 9;break;
		case Â:offset = 12;break;
		case Û:offset = 12;break;
		case Ò:offset = 13;break;
		case ò:offset = 9;break;
		case ë:offset = 9;break;
		case Ë:offset = 9;break;
		case ä:offset = 10;break;
		case Ä:offset = 12;break;
		case ö:offset = 9;break;
		case Ö:offset = 13;break;
		case ÿ:offset = 10;break;
		case â:offset = 10;break;
		case ì:offset = 8;break;
		case ü:offset=9;break;
		case AND:offset = 13;break;
		case VIRG:offset = 4;break;
		case PVIRG:offset = 5;break;
		case POINT:offset = 4;break;
		case EXC:offset = 4;break;
		case INTER:offset = 9;break;
		case APOST:offset = 4;break;
		case GUIE:offset = 10;break;
		case TIRER:offset = 7;break;
		case DPOINT:offset = 4;break;
		case INF:offset = 7;break;
		case SUP:offset = 7;break;
		case SLASH:offset = 9;break;
		case STAR:offset = 9;break;
		case PLUS:offset = 10;break;
		case EGAL:offset = 8;break;
		case POURCENT:offset = 14;break;
		case PARG:offset = 6;break;
		case PARD:offset = 6;break;
		case CROG:offset = 6;break;
		case CROD:offset = 6;break;
		case ACOG:offset = 6;break;
		case ACOD:offset = 6;break;
		case SPACE:offset = 4;break;
		case UNKNOWN:offset = 16;break;
		case LINE:offset = 0;coord[1]+=20;coord[0]=xStart;break;
		case RED:offset = 0;color = true;break;
		case BLUE:offset = 0;color = true;break;
		case GREEN:offset = 0;color = true;break;
		case GRAY:offset = 0;color = true;break;
		case WHITE:offset = 0;color = true;break;
		case BLACK:offset = 0;color = true;break;
		case GOLD:offset = 0;color = true;break;
		case LIGHTBLUE:offset = 0;color = true;break;	
		case ROTATETRIGO:offset = 16;break;
		case ROTATEDIRECT:offset = 16;break;
		default:offset = 16;break;
		}
	}
	@Override
	public int getOffset() {
		return offset;
	}

	@Override
	public int[] getLetter() {
		switch (super.chara) {
		case A:return A;
		case B:return B;
		case C:return C;
		case D:return D;
		case E:return E;
		case F:return F;
		case G:return G;
		case H:return H;
		case I:return I;
		case J:return J;
		case K:return K;
		case L:return L;
		case M:return M;
		case N:return N;
		case O:return O;
		case P:return P;
		case Q:return Q;
		case R:return R;
		case S:return S;
		case T:return T;
		case U:return U;
		case V:return V;
		case W:return W;
		case X:return X;
		case Y:return Y;
		case Z:return Z;
		case a:return a;
		case b:return b;
		case c:return c;
		case d:return d;
		case e:return e;
		case f:return f;
		case g:return g;
		case h:return h;
		case i:return i;
		case j:return j;
		case k:return k;
		case l:return l;
		case m:return m;
		case n:return n;
		case o:return o;
		case p:return p;
		case q:return q;
		case r:return r;
		case s:return s;
		case t:return t;
		case u:return u;
		case v:return v;
		case w:return w;
		case x:return x;
		case y:return y;
		case z:return z;
		case n1:return n1;
		case n2:return n2;
		case n3:return n3;
		case n4:return n4;
		case n5:return n5;
		case n6:return n6;
		case n7:return n7;
		case n8:return n8;
		case n9:return n9;
		case n0:return n0;
		case Ê:return Ê;
		case É:return É;
		case À:return À;
		case Ï:return Ï;
		case Î:return Î;
		case Ù:return Ù;
		case Ô:return Ô;
		case Ç:return Ç;
		case é:return é;
		case è:return è;
		case ê:return ê;
		case à:return à;
		case ï:return ï;
		case î:return î;
		case ù:return ù;
		case û:return û;
		case ô:return ô;
		case ç:return ç;
		case È:return È;
		case Â:return Â;
		case Û:return Û;
		case Ò:return Ò;
		case ò:return ò;
		case ë:return ë;
		case Ë:return Ë;
		case ä:return ä;
		case Ä:return Ä;
		case ö:return ö;
		case Ö:return Ö;
		case ÿ:return ÿ;
		case â:return â;
		case ì:return ì;
		case ü:return ü;
		case AND:return AND;
		case VIRG:return VIRG;
		case PVIRG:return PVIRG;
		case POINT:return POINT;
		case EXC:return EXC;
		case INTER:return INTER;
		case APOST:return APOST;
		case GUIE:return GUIE;
		case TIRER:return TIRER;
		case DPOINT:return DPOINT;
		case INF:return INF;
		case SUP:return SUP;
		case SLASH:return SLASH;
		case STAR:return STAR;
		case PLUS:return PLUS;
		case EGAL:return EGAL;
		case POURCENT:return POURCENT;
		case PARG:return PARG;
		case PARD:return PARD;
		case CROG:return CROG;
		case CROD:return CROD;
		case ACOG:return ACOG;
		case ACOD:return ACOD;
		case SPACE:return SPACE;
		case UNKNOWN:return UNKNOWN;
		case LINE:return LINE;
		case RED:return RED;
		case BLUE:return BLUE;
		case GREEN:return GREEN;
		case GRAY:return GRAY;
		case WHITE:return WHITE;
		case BLACK:return BLACK;
		case GOLD:return GOLD;
		case LIGHTBLUE:return LIGHTBLUE;	
		case ROTATETRIGO:return ROTATETRIGO;
		case ROTATEDIRECT:return ROTATEDIRECT;
		default:return UNKNOWN;
		}
	}

}
